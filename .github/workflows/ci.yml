name: eNeFTi CI
run-name: eNeFTi Content-Integration
on:
  push:
    branches: [main]
  # For collaborations
  pull_request:
    branches: [main]
jobs:
  # Following jobs might be simplified into single one
  # Splitting as pipeline demonstration
  setup:
    runs-on: ubuntu-latest
    env:
      BASE_URL: ${{ vars.BASE_URL }}
      PORT: ${{ vars.PORT }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Use Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'
      - name: Create `env` file and provide environment variables
        run: |
          touch .env
          echo BASE_URL=$BASE_URL >> .env
          echo PORT=$PORT >> .env
          echo DB_NAME=$DB_NAME >> .env
          echo DB_USER=$DB_USER >> .env
          echo DB_PASSWORD=$DB_PASSWORD >> .env
          mv .env backend/
      - name: Installing dependencies
        run: npm run setup:ci
      # Cache dependencies for future reuse
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache
            ./node_modules
          key: modules-${{ hashFiles('**/package-lock.json') }}
      # Store project for future reuse
      - name: Archive project artifacts
        uses: actions/upload-artifact@v4
        with:
          name: enefti
          # i.e. dotfiles
          include-hidden-files: true
          # Exclude dependencies to lighten artifacts (provided via cache)
          path: |
            .
            !./node_modules
  test:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      # Get dependencies
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache
            ./node_modules
          key: modules-${{ hashFiles('**/package-lock.json') }}
      # Download stored project
      - name: Getting project artifacts
        uses: actions/download-artifact@v4
        with:
          name: enefti
      - name: Allow MongoDB Atlas IP
        uses: textbook/atlas-ip@v1.1.0
        with:
          atlas-private-key: ${{ secrets.ATLAS_PRIVATE_KEY }}
          atlas-public-key: ${{ secrets.ATLAS_PUBLIC_KEY }}
          group-id: ${{ secrets.ATLAS_GROUP_ID }}
      - name: Test applications
        run: npm run test
      - name: Test applications - E2E
        run: npm run test:e2e
        #uses: cypress-io/github-action@v6
        #with:
        #  working-directory: .
        #  project: ./frontend
        #  build: npm run build -w backend && concurrently 'npm run start -w backend' 'npm run build -w frontend'
        #  start: npm run start -w frontend
      # Tests report storing for QA/checks
      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: enefti-test
          path: ./**/coverage/**/*
  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('**/package-lock.json') }}
      - name: Getting project artifacts
        uses: actions/download-artifact@v4
        with:
          name: enefti
      - name: Build packages
        run: npm run build
      - name: Cache production dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
      - name: Archive production verions
        uses: actions/upload-artifact@v4
        with:
          name: enefti-production
          path: |
            ./backend
            ./frontend
            ./package*
